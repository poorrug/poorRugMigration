{"ast":null,"code":"var _jsxFileName = \"/Users/sminem/Documents/GitHub/poorRugMigration/src/contexts/Modals/Modals.tsx\";\nimport React, { createContext, useCallback, useState } from 'react';\nimport styled from 'styled-components';\nexport const Context = createContext({\n  onPresent: () => {},\n  onDismiss: () => {}\n});\n\nconst Modals = ({\n  children\n}) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [content, setContent] = useState();\n  const handlePresent = useCallback(modalContent => {\n    setContent(modalContent);\n    setIsOpen(true);\n  }, [setContent, setIsOpen]);\n  const handleDismiss = useCallback(() => {\n    setContent(undefined);\n    setIsOpen(false);\n  }, [setContent, setIsOpen]);\n  return /*#__PURE__*/React.createElement(Context.Provider, {\n    value: {\n      content,\n      isOpen,\n      onPresent: handlePresent,\n      onDismiss: handleDismiss\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, children, isOpen && /*#__PURE__*/React.createElement(StyledModalWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(StyledModalBackdrop, {\n    onClick: handleDismiss,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }), React.isValidElement(content) && React.cloneElement(content, {\n    onDismiss: handleDismiss\n  })));\n};\n\nconst StyledModalWrapper = styled.div`\n  align-items: center;\n  display: flex;\n  justify-content: center;\n  position: fixed;\n  top: 0; right: 0; bottom: 0; left: 0;\n`;\nconst StyledModalBackdrop = styled.div`\n  background-color: ${props => props.theme.color.grey[600]}aa;\n  position: absolute;\n  top: 0; right: 0; bottom: 0; left: 0;\n`;\nexport default Modals;","map":{"version":3,"sources":["/Users/sminem/Documents/GitHub/poorRugMigration/src/contexts/Modals/Modals.tsx"],"names":["React","createContext","useCallback","useState","styled","Context","onPresent","onDismiss","Modals","children","isOpen","setIsOpen","content","setContent","handlePresent","modalContent","handleDismiss","undefined","isValidElement","cloneElement","StyledModalWrapper","div","StyledModalBackdrop","props","theme","color","grey"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,WAA/B,EAA4CC,QAA5C,QAA4D,OAA5D;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AASA,OAAO,MAAMC,OAAO,GAAGJ,aAAa,CAAgB;AAClDK,EAAAA,SAAS,EAAE,MAAM,CAAE,CAD+B;AAElDC,EAAAA,SAAS,EAAE,MAAM,CAAE;AAF+B,CAAhB,CAA7B;;AAKP,MAAMC,MAAgB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACzC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,EAAtC;AAEA,QAAMW,aAAa,GAAGZ,WAAW,CAAEa,YAAD,IAAmC;AACnEF,IAAAA,UAAU,CAACE,YAAD,CAAV;AACAJ,IAAAA,SAAS,CAAC,IAAD,CAAT;AACD,GAHgC,EAG9B,CAACE,UAAD,EAAaF,SAAb,CAH8B,CAAjC;AAKA,QAAMK,aAAa,GAAGd,WAAW,CAAC,MAAM;AACtCW,IAAAA,UAAU,CAACI,SAAD,CAAV;AACAN,IAAAA,SAAS,CAAC,KAAD,CAAT;AACD,GAHgC,EAG9B,CAACE,UAAD,EAAaF,SAAb,CAH8B,CAAjC;AAKA,sBACE,oBAAC,OAAD,CAAS,QAAT;AAAkB,IAAA,KAAK,EAAE;AACvBC,MAAAA,OADuB;AAEvBF,MAAAA,MAFuB;AAGvBJ,MAAAA,SAAS,EAAEQ,aAHY;AAIvBP,MAAAA,SAAS,EAAES;AAJY,KAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGP,QANH,EAOGC,MAAM,iBACL,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,mBAAD;AAAqB,IAAA,OAAO,EAAEM,aAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGhB,KAAK,CAACkB,cAAN,CAAqBN,OAArB,KAAiCZ,KAAK,CAACmB,YAAN,CAAmBP,OAAnB,EAA4B;AAC5DL,IAAAA,SAAS,EAAES;AADiD,GAA5B,CAFpC,CARJ,CADF;AAkBD,CAhCD;;AAkCA,MAAMI,kBAAkB,GAAGhB,MAAM,CAACiB,GAAI;;;;;;CAAtC;AAQA,MAAMC,mBAAmB,GAAGlB,MAAM,CAACiB,GAAI;sBACjBE,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYC,KAAZ,CAAkBC,IAAlB,CAAuB,GAAvB,CAA4B;;;CAD3D;AAMA,eAAelB,MAAf","sourcesContent":["import React, { createContext, useCallback, useState } from 'react'\nimport styled from 'styled-components'\n\ninterface ModalsContext {\n  content?: React.ReactNode,\n  isOpen?: boolean,\n  onPresent: (content: React.ReactNode) => void,\n  onDismiss: () => void\n}\n\nexport const Context = createContext<ModalsContext>({\n  onPresent: () => {},\n  onDismiss: () => {},\n})\n\nconst Modals: React.FC = ({ children }) => {\n  const [isOpen, setIsOpen] = useState(false)\n  const [content, setContent] = useState<React.ReactNode>()\n\n  const handlePresent = useCallback((modalContent: React.ReactNode) => {\n    setContent(modalContent)\n    setIsOpen(true)\n  }, [setContent, setIsOpen])\n\n  const handleDismiss = useCallback(() => {\n    setContent(undefined)\n    setIsOpen(false)\n  }, [setContent, setIsOpen])\n\n  return (\n    <Context.Provider value={{\n      content,\n      isOpen,\n      onPresent: handlePresent,\n      onDismiss: handleDismiss,\n    }}>\n      {children}\n      {isOpen && (\n        <StyledModalWrapper>\n          <StyledModalBackdrop onClick={handleDismiss} />\n          {React.isValidElement(content) && React.cloneElement(content, {\n            onDismiss: handleDismiss,\n          })}\n        </StyledModalWrapper>\n      )}\n    </Context.Provider>\n  )\n}\n\nconst StyledModalWrapper = styled.div`\n  align-items: center;\n  display: flex;\n  justify-content: center;\n  position: fixed;\n  top: 0; right: 0; bottom: 0; left: 0;\n`\n\nconst StyledModalBackdrop = styled.div`\n  background-color: ${props => props.theme.color.grey[600]}aa;\n  position: absolute;\n  top: 0; right: 0; bottom: 0; left: 0;\n`\n\nexport default Modals"]},"metadata":{},"sourceType":"module"}