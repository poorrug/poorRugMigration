{"ast":null,"code":"var _jsxFileName = \"/Users/sminem/Documents/GitHub/poorRugMigration/src/views/Farms/components/FarmCards.tsx\";\nimport React, { useCallback, useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport Countdown from 'react-countdown';\nimport Button from '../../../components/Button';\nimport Card from '../../../components/Card';\nimport CardContent from '../../../components/CardContent';\nimport CardIcon from '../../../components/CardIcon';\nimport Loader from '../../../components/Loader';\nimport useFarms from '../../../hooks/useFarms';\nimport { getPoolStartTime } from '../../../yamUtils';\n\nconst FarmCards = () => {\n  const [farms] = useFarms();\n  const rows = farms.reduce((farmRows, farm) => {\n    const newFarmRows = [...farmRows];\n\n    if (newFarmRows[newFarmRows.length - 1].length === 3) {\n      newFarmRows.push([farm]);\n    } else {\n      newFarmRows[newFarmRows.length - 1].push(farm);\n    }\n\n    return newFarmRows;\n  }, [[]]);\n  return /*#__PURE__*/React.createElement(StyledCards, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, !!rows[0].length ? rows.map((farmRow, i) => /*#__PURE__*/React.createElement(StyledRow, {\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, farmRow.map((farm, j) => /*#__PURE__*/React.createElement(React.Fragment, {\n    key: j,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FarmCard, {\n    farm: farm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 15\n    }\n  }), (j === 0 || j === 1) && /*#__PURE__*/React.createElement(StyledSpacer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 40\n    }\n  }))))) : /*#__PURE__*/React.createElement(StyledLoadingWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Loader, {\n    text: \"Loading farms\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  })));\n};\n\nconst FarmCard = ({\n  farm\n}) => {\n  const [startTime, setStartTime] = useState(0);\n  const getStartTime = useCallback(async () => {\n    const startTime = await getPoolStartTime(farm.contract);\n    setStartTime(startTime);\n  }, [farm, setStartTime]);\n\n  const renderer = countdownProps => {\n    const {\n      hours,\n      minutes,\n      seconds\n    } = countdownProps;\n    const paddedSeconds = seconds < 10 ? `0${seconds}` : seconds;\n    const paddedMinutes = minutes < 10 ? `0${minutes}` : minutes;\n    const paddedHours = hours < 10 ? `0${hours}` : hours;\n    return /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        width: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }\n    }, paddedHours, \":\", paddedMinutes, \":\", paddedSeconds);\n  };\n\n  useEffect(() => {\n    if (farm && farm.id === 'ycrv_yam_uni_lp') {\n      getStartTime();\n    }\n  }, [farm, getStartTime]);\n  const poolActive = startTime * 1000 - Date.now() <= 0;\n  return /*#__PURE__*/React.createElement(StyledCardWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, farm.id === 'ycrv_yam_uni_lp' && /*#__PURE__*/React.createElement(StyledCardAccent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(StyledContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CardIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, farm.icon), /*#__PURE__*/React.createElement(StyledTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, farm.name), /*#__PURE__*/React.createElement(StyledDetails, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(StyledDetail, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }, \"Deposit \", farm.depositToken.toUpperCase()), /*#__PURE__*/React.createElement(StyledDetail, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }\n  }, \"Earn \", farm.earnToken.toUpperCase())), /*#__PURE__*/React.createElement(Button, {\n    disabled: !poolActive,\n    text: poolActive ? 'Select' : undefined,\n    to: `/farms/${farm.id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, !poolActive && /*#__PURE__*/React.createElement(Countdown, {\n    date: new Date(startTime * 1000),\n    renderer: renderer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 31\n    }\n  }))))));\n};\n\nconst StyledCardAccent = styled.div`\n  background: linear-gradient(\n    45deg,\n    rgba(255, 0, 0, 1) 0%,\n    rgba(255, 154, 0, 1) 10%,\n    rgba(208, 222, 33, 1) 20%,\n    rgba(79, 220, 74, 1) 30%,\n    rgba(63, 218, 216, 1) 40%,\n    rgba(47, 201, 226, 1) 50%,\n    rgba(28, 127, 238, 1) 60%,\n    rgba(95, 21, 242, 1) 70%,\n    rgba(186, 12, 248, 1) 80%,\n    rgba(251, 7, 217, 1) 90%,\n    rgba(255, 0, 0, 1) 100%\n  );\n  border-radius: 12px;\n  filter: blur(4px);\n  position: absolute;\n  top: -2px; right: -2px; bottom: -2px; left: -2px;\n  z-index: -1;\n`;\nconst StyledCards = styled.div`\n  width: 900px;\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`;\nconst StyledLoadingWrapper = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  justify-content: center;\n`;\nconst StyledRow = styled.div`\n  display: flex;\n  margin-bottom: ${props => props.theme.spacing[4]}px;\n  flex-flow: row wrap;\n  @media (max-width: 768px) {\n    width: 100%;\n    flex-flow: column nowrap;\n    align-items: center;\n  }\n`;\nconst StyledCardWrapper = styled.div`\n  display: flex;\n  width: calc((900px - ${props => props.theme.spacing[4]}px * 2) / 3);\n  position: relative;\n`;\nconst StyledTitle = styled.h4`\n  color: ${props => props.theme.color.grey[600]};\n  font-size: 24px;\n  font-weight: 700;\n  margin: ${props => props.theme.spacing[2]}px 0 0;\n  padding: 0;\n`;\nconst StyledContent = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n`;\nconst StyledSpacer = styled.div`\n  height: ${props => props.theme.spacing[4]}px;\n  width: ${props => props.theme.spacing[4]}px;\n`;\nconst StyledDetails = styled.div`\n  margin-bottom: ${props => props.theme.spacing[6]}px;\n  margin-top: ${props => props.theme.spacing[2]}px;\n  text-align: center;\n`;\nconst StyledDetail = styled.div`\n  color: ${props => props.theme.color.grey[500]};\n`;\nexport default FarmCards;","map":{"version":3,"sources":["/Users/sminem/Documents/GitHub/poorRugMigration/src/views/Farms/components/FarmCards.tsx"],"names":["React","useCallback","useEffect","useState","styled","Countdown","Button","Card","CardContent","CardIcon","Loader","useFarms","getPoolStartTime","FarmCards","farms","rows","reduce","farmRows","farm","newFarmRows","length","push","map","farmRow","i","j","FarmCard","startTime","setStartTime","getStartTime","contract","renderer","countdownProps","hours","minutes","seconds","paddedSeconds","paddedMinutes","paddedHours","width","id","poolActive","Date","now","icon","name","depositToken","toUpperCase","earnToken","undefined","StyledCardAccent","div","StyledCards","StyledLoadingWrapper","StyledRow","props","theme","spacing","StyledCardWrapper","StyledTitle","h4","color","grey","StyledContent","StyledSpacer","StyledDetails","StyledDetail"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,EAAiDC,QAAjD,QAAiE,OAAjE;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,SAAP,MAA+C,iBAA/C;AAEA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,IAAP,MAAiB,0BAAjB;AACA,OAAOC,WAAP,MAAwB,iCAAxB;AACA,OAAOC,QAAP,MAAqB,8BAArB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AAEA,OAAOC,QAAP,MAAqB,yBAArB;AAIA,SAASC,gBAAT,QAAiC,mBAAjC;;AAEA,MAAMC,SAAmB,GAAG,MAAM;AAChC,QAAM,CAACC,KAAD,IAAUH,QAAQ,EAAxB;AAEA,QAAMI,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAuB,CAACC,QAAD,EAAWC,IAAX,KAAoB;AACtD,UAAMC,WAAW,GAAG,CAAC,GAAGF,QAAJ,CAApB;;AACA,QAAIE,WAAW,CAACA,WAAW,CAACC,MAAZ,GAAqB,CAAtB,CAAX,CAAoCA,MAApC,KAA+C,CAAnD,EAAsD;AACpDD,MAAAA,WAAW,CAACE,IAAZ,CAAiB,CAACH,IAAD,CAAjB;AACD,KAFD,MAEO;AACLC,MAAAA,WAAW,CAACA,WAAW,CAACC,MAAZ,GAAqB,CAAtB,CAAX,CAAoCC,IAApC,CAAyCH,IAAzC;AACD;;AACD,WAAOC,WAAP;AACD,GARY,EAQV,CAAC,EAAD,CARU,CAAb;AAUA,sBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAAC,CAACJ,IAAI,CAAC,CAAD,CAAJ,CAAQK,MAAV,GAAmBL,IAAI,CAACO,GAAL,CAAS,CAACC,OAAD,EAAUC,CAAV,kBAC3B,oBAAC,SAAD;AAAW,IAAA,GAAG,EAAEA,CAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,OAAO,CAACD,GAAR,CAAY,CAACJ,IAAD,EAAOO,CAAP,kBACX,oBAAC,KAAD,CAAO,QAAP;AAAgB,IAAA,GAAG,EAAEA,CAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEP,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEG,CAACO,CAAC,KAAK,CAAN,IAAWA,CAAC,KAAK,CAAlB,kBAAwB,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAF3B,CADD,CADH,CADkB,CAAnB,gBAUG,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAXN,CADF;AAkBD,CA/BD;;AAqCA,MAAMC,QAAiC,GAAG,CAAC;AAAER,EAAAA;AAAF,CAAD,KAAc;AACtD,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BzB,QAAQ,CAAC,CAAD,CAA1C;AAEA,QAAM0B,YAAY,GAAG5B,WAAW,CAAC,YAAY;AAC3C,UAAM0B,SAAS,GAAG,MAAMf,gBAAgB,CAACM,IAAI,CAACY,QAAN,CAAxC;AACAF,IAAAA,YAAY,CAACD,SAAD,CAAZ;AACD,GAH+B,EAG7B,CAACT,IAAD,EAAOU,YAAP,CAH6B,CAAhC;;AAKA,QAAMG,QAAQ,GAAIC,cAAD,IAA0C;AACzD,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA,OAAT;AAAkBC,MAAAA;AAAlB,QAA8BH,cAApC;AACA,UAAMI,aAAa,GAAGD,OAAO,GAAG,EAAV,GAAgB,IAAGA,OAAQ,EAA3B,GAA+BA,OAArD;AACA,UAAME,aAAa,GAAGH,OAAO,GAAG,EAAV,GAAgB,IAAGA,OAAQ,EAA3B,GAA+BA,OAArD;AACA,UAAMI,WAAW,GAAGL,KAAK,GAAG,EAAR,GAAc,IAAGA,KAAM,EAAvB,GAA2BA,KAA/C;AACA,wBACE;AAAM,MAAA,KAAK,EAAE;AAAEM,QAAAA,KAAK,EAAE;AAAT,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiCD,WAAjC,OAA+CD,aAA/C,OAA+DD,aAA/D,CADF;AAGD,GARD;;AAUAlC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIgB,IAAI,IAAIA,IAAI,CAACsB,EAAL,KAAY,iBAAxB,EAA2C;AACzCX,MAAAA,YAAY;AACb;AACF,GAJQ,EAIN,CAACX,IAAD,EAAOW,YAAP,CAJM,CAAT;AAMA,QAAMY,UAAU,GAAGd,SAAS,GAAG,IAAZ,GAAmBe,IAAI,CAACC,GAAL,EAAnB,IAAiC,CAApD;AAEA,sBACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGzB,IAAI,CAACsB,EAAL,KAAY,iBAAZ,iBACC,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAIE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAWtB,IAAI,CAAC0B,IAAhB,CADF,eAEE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAc1B,IAAI,CAAC2B,IAAnB,CAFF,eAGE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAuB3B,IAAI,CAAC4B,YAAL,CAAkBC,WAAlB,EAAvB,CADF,eAEE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAoB7B,IAAI,CAAC8B,SAAL,CAAeD,WAAf,EAApB,CAFF,CAHF,eAOE,oBAAC,MAAD;AACE,IAAA,QAAQ,EAAE,CAACN,UADb;AAEE,IAAA,IAAI,EAAEA,UAAU,GAAG,QAAH,GAAcQ,SAFhC;AAGE,IAAA,EAAE,EAAG,UAAS/B,IAAI,CAACsB,EAAG,EAHxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKG,CAACC,UAAD,iBAAe,oBAAC,SAAD;AAAW,IAAA,IAAI,EAAE,IAAIC,IAAJ,CAASf,SAAS,GAAG,IAArB,CAAjB;AAA6C,IAAA,QAAQ,EAAEI,QAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALlB,CAPF,CADF,CADF,CAJF,CADF;AA0BD,CApDD;;AAsDA,MAAMmB,gBAAgB,GAAG9C,MAAM,CAAC+C,GAAI;;;;;;;;;;;;;;;;;;;;CAApC;AAsBA,MAAMC,WAAW,GAAGhD,MAAM,CAAC+C,GAAI;;;;;CAA/B;AAOA,MAAME,oBAAoB,GAAGjD,MAAM,CAAC+C,GAAI;;;;;CAAxC;AAOA,MAAMG,SAAS,GAAGlD,MAAM,CAAC+C,GAAI;;mBAEVI,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYC,OAAZ,CAAoB,CAApB,CAAuB;;;;;;;CAFnD;AAWA,MAAMC,iBAAiB,GAAGtD,MAAM,CAAC+C,GAAI;;yBAEZI,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYC,OAAZ,CAAoB,CAApB,CAAuB;;CAFzD;AAMA,MAAME,WAAW,GAAGvD,MAAM,CAACwD,EAAG;WACnBL,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYK,KAAZ,CAAkBC,IAAlB,CAAuB,GAAvB,CAA4B;;;YAGpCP,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYC,OAAZ,CAAoB,CAApB,CAAuB;;CAJ5C;AAQA,MAAMM,aAAa,GAAG3D,MAAM,CAAC+C,GAAI;;;;CAAjC;AAMA,MAAMa,YAAY,GAAG5D,MAAM,CAAC+C,GAAI;YACpBI,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYC,OAAZ,CAAoB,CAApB,CAAuB;WACjCF,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYC,OAAZ,CAAoB,CAApB,CAAuB;CAF3C;AAKA,MAAMQ,aAAa,GAAG7D,MAAM,CAAC+C,GAAI;mBACdI,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYC,OAAZ,CAAoB,CAApB,CAAuB;gBACnCF,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYC,OAAZ,CAAoB,CAApB,CAAuB;;CAFhD;AAMA,MAAMS,YAAY,GAAG9D,MAAM,CAAC+C,GAAI;WACrBI,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYK,KAAZ,CAAkBC,IAAlB,CAAuB,GAAvB,CAA4B;CADhD;AAIA,eAAejD,SAAf","sourcesContent":["import React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport Countdown, { CountdownRenderProps} from 'react-countdown'\n\nimport Button from '../../../components/Button'\nimport Card from '../../../components/Card'\nimport CardContent from '../../../components/CardContent'\nimport CardIcon from '../../../components/CardIcon'\nimport Loader from '../../../components/Loader'\n\nimport useFarms from '../../../hooks/useFarms'\n\nimport { Farm } from '../../../contexts/Farms'\n\nimport { getPoolStartTime } from '../../../yamUtils'\n\nconst FarmCards: React.FC = () => {\n  const [farms] = useFarms()\n\n  const rows = farms.reduce<Farm[][]>((farmRows, farm) => {\n    const newFarmRows = [...farmRows]\n    if (newFarmRows[newFarmRows.length - 1].length === 3) {\n      newFarmRows.push([farm])\n    } else {\n      newFarmRows[newFarmRows.length - 1].push(farm)\n    }\n    return newFarmRows\n  }, [[]])\n\n  return (\n    <StyledCards>\n      {!!rows[0].length ? rows.map((farmRow, i) => (\n        <StyledRow key={i}>\n          {farmRow.map((farm, j) => (\n            <React.Fragment key={j}>\n              <FarmCard farm={farm} />\n              {(j === 0 || j === 1) && <StyledSpacer />}\n            </React.Fragment>\n          ))}\n        </StyledRow>\n      )) : (\n          <StyledLoadingWrapper>\n            <Loader text=\"Loading farms\" />\n          </StyledLoadingWrapper>\n        )}\n    </StyledCards>\n  )\n}\n\ninterface FarmCardProps {\n  farm: Farm,\n}\n\nconst FarmCard: React.FC<FarmCardProps> = ({ farm }) => {\n  const [startTime, setStartTime] = useState(0)\n\n  const getStartTime = useCallback(async () => {\n    const startTime = await getPoolStartTime(farm.contract)\n    setStartTime(startTime)\n  }, [farm, setStartTime])\n\n  const renderer = (countdownProps: CountdownRenderProps) => {\n    const { hours, minutes, seconds } = countdownProps\n    const paddedSeconds = seconds < 10 ? `0${seconds}` : seconds\n    const paddedMinutes = minutes < 10 ? `0${minutes}` : minutes\n    const paddedHours = hours < 10 ? `0${hours}` : hours\n    return (\n      <span style={{ width: '100%' }}>{paddedHours}:{paddedMinutes}:{paddedSeconds}</span>\n    )\n  }\n\n  useEffect(() => {\n    if (farm && farm.id === 'ycrv_yam_uni_lp') {\n      getStartTime()\n    }\n  }, [farm, getStartTime])\n  \n  const poolActive = startTime * 1000 - Date.now() <= 0\n\n  return (\n    <StyledCardWrapper>\n      {farm.id === 'ycrv_yam_uni_lp' && (\n        <StyledCardAccent />\n      )}\n      <Card>\n        <CardContent>\n          <StyledContent>\n            <CardIcon>{farm.icon}</CardIcon>\n            <StyledTitle>{farm.name}</StyledTitle>\n            <StyledDetails>\n              <StyledDetail>Deposit {farm.depositToken.toUpperCase()}</StyledDetail>\n              <StyledDetail>Earn {farm.earnToken.toUpperCase()}</StyledDetail>\n            </StyledDetails>\n            <Button\n              disabled={!poolActive}\n              text={poolActive ? 'Select' : undefined}\n              to={`/farms/${farm.id}`}\n            >\n              {!poolActive && <Countdown date={new Date(startTime * 1000)} renderer={renderer} />}\n            </Button>\n          </StyledContent>\n        </CardContent>\n      </Card>\n    </StyledCardWrapper>\n  )\n}\n\nconst StyledCardAccent = styled.div`\n  background: linear-gradient(\n    45deg,\n    rgba(255, 0, 0, 1) 0%,\n    rgba(255, 154, 0, 1) 10%,\n    rgba(208, 222, 33, 1) 20%,\n    rgba(79, 220, 74, 1) 30%,\n    rgba(63, 218, 216, 1) 40%,\n    rgba(47, 201, 226, 1) 50%,\n    rgba(28, 127, 238, 1) 60%,\n    rgba(95, 21, 242, 1) 70%,\n    rgba(186, 12, 248, 1) 80%,\n    rgba(251, 7, 217, 1) 90%,\n    rgba(255, 0, 0, 1) 100%\n  );\n  border-radius: 12px;\n  filter: blur(4px);\n  position: absolute;\n  top: -2px; right: -2px; bottom: -2px; left: -2px;\n  z-index: -1;\n`\n\nconst StyledCards = styled.div`\n  width: 900px;\n  @media (max-width: 768px) {\n    width: 100%;\n  }\n`\n\nconst StyledLoadingWrapper = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  justify-content: center;\n`\n\nconst StyledRow = styled.div`\n  display: flex;\n  margin-bottom: ${props => props.theme.spacing[4]}px;\n  flex-flow: row wrap;\n  @media (max-width: 768px) {\n    width: 100%;\n    flex-flow: column nowrap;\n    align-items: center;\n  }\n`\n\nconst StyledCardWrapper = styled.div`\n  display: flex;\n  width: calc((900px - ${props => props.theme.spacing[4]}px * 2) / 3);\n  position: relative;\n`\n\nconst StyledTitle = styled.h4`\n  color: ${props => props.theme.color.grey[600]};\n  font-size: 24px;\n  font-weight: 700;\n  margin: ${props => props.theme.spacing[2]}px 0 0;\n  padding: 0;\n`\n\nconst StyledContent = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n`\n\nconst StyledSpacer = styled.div`\n  height: ${props => props.theme.spacing[4]}px;\n  width: ${props => props.theme.spacing[4]}px;\n`\n\nconst StyledDetails = styled.div`\n  margin-bottom: ${props => props.theme.spacing[6]}px;\n  margin-top: ${props => props.theme.spacing[2]}px;\n  text-align: center;\n`\n\nconst StyledDetail = styled.div`\n  color: ${props => props.theme.color.grey[500]};\n`\n\nexport default FarmCards\n"]},"metadata":{},"sourceType":"module"}