{"ast":null,"code":"var _jsxFileName = \"/Users/sminem/Documents/GitHub/poorRugMigration/src/components/Button/Button.tsx\";\nimport React, { useContext, useMemo } from 'react';\nimport styled, { ThemeContext } from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nconst Button = ({\n  children,\n  disabled,\n  href,\n  onClick,\n  size,\n  text,\n  to,\n  variant\n}) => {\n  const {\n    color,\n    spacing\n  } = useContext(ThemeContext);\n  let buttonColor;\n\n  switch (variant) {\n    case 'secondary':\n      buttonColor = color.grey[500];\n      break;\n\n    case 'default':\n    default:\n      buttonColor = color.primary.main;\n  }\n\n  let boxShadow;\n  let buttonSize;\n  let buttonPadding;\n  let fontSize;\n\n  switch (size) {\n    case 'sm':\n      boxShadow = `4px 4px 8px ${color.grey[300]},\n        -8px -8px 16px ${color.grey[100]}FF;`;\n      buttonPadding = spacing[3];\n      buttonSize = 36;\n      fontSize = 14;\n      break;\n\n    case 'lg':\n      boxShadow = `6px 6px 12px ${color.grey[300]},\n        -12px -12px 24px ${color.grey[100]}ff;`;\n      buttonPadding = spacing[4];\n      buttonSize = 72;\n      fontSize = 16;\n      break;\n\n    case 'md':\n    default:\n      boxShadow = `6px 6px 12px ${color.grey[300]},\n        -12px -12px 24px -2px ${color.grey[100]}ff;`;\n      buttonPadding = spacing[4];\n      buttonSize = 56;\n      fontSize = 16;\n  }\n\n  const ButtonChild = useMemo(() => {\n    if (to) {\n      return /*#__PURE__*/React.createElement(StyledLink, {\n        to: to,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 14\n        }\n      }, text);\n    } else if (href) {\n      return /*#__PURE__*/React.createElement(StyledExternalLink, {\n        href: href,\n        target: \"__blank\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 14\n        }\n      }, text);\n    } else {\n      return text;\n    }\n  }, [href, text, to]);\n  return /*#__PURE__*/React.createElement(StyledButton, {\n    boxShadow: boxShadow,\n    color: buttonColor,\n    disabled: disabled,\n    fontSize: fontSize,\n    onClick: onClick,\n    padding: buttonPadding,\n    size: buttonSize,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, children, ButtonChild);\n};\n\nconst StyledButton = styled.button`\n  align-items: center;\n  background-color: ${props => props.theme.color.grey[200]};\n  border: 0;\n  border-radius: 12px;\n  box-shadow: ${props => props.boxShadow};\n  color: ${props => !props.disabled ? props.color : `${props.color}55`};\n  cursor: pointer;\n  display: flex;\n  font-size: ${props => props.fontSize}px;\n  font-weight: 700;\n  height: ${props => props.size}px;\n  justify-content: center;\n  outline: none;\n  padding-left: ${props => props.padding}px;\n  padding-right: ${props => props.padding}px;\n  pointer-events: ${props => !props.disabled ? undefined : 'none'};\n  width: 100%;\n  &:hover {\n    background-color: ${props => props.theme.color.grey[100]};\n  }\n`;\nconst StyledLink = styled(Link)`\n  align-items: center;\n  color: inherit;\n  display: flex;\n  flex: 1;\n  height: 56px;\n  justify-content: center;\n  margin: 0 ${props => -props.theme.spacing[4]}px;\n  padding: 0 ${props => props.theme.spacing[4]}px;\n  text-decoration: none;\n`;\nconst StyledExternalLink = styled.a`\n  align-items: center;\n  color: inherit;\n  display: flex;\n  flex: 1;\n  height: 56px;\n  justify-content: center;\n  margin: 0 ${props => -props.theme.spacing[4]}px;\n  padding: 0 ${props => props.theme.spacing[4]}px;\n  text-decoration: none;\n`;\nexport default Button;","map":{"version":3,"sources":["/Users/sminem/Documents/GitHub/poorRugMigration/src/components/Button/Button.tsx"],"names":["React","useContext","useMemo","styled","ThemeContext","Link","Button","children","disabled","href","onClick","size","text","to","variant","color","spacing","buttonColor","grey","primary","main","boxShadow","buttonSize","buttonPadding","fontSize","ButtonChild","StyledButton","button","props","theme","padding","undefined","StyledLink","StyledExternalLink","a"],"mappings":"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","sourcesContent":["import React, { useContext, useMemo } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\nimport { Link } from 'react-router-dom'\n\ninterface ButtonProps {\n  children?: React.ReactNode,\n  disabled?: boolean,\n  href?: string,\n  onClick?: () => void,\n  size?: 'sm' | 'md' | 'lg',\n  text?: string,\n  to?: string,\n  variant?: 'default' | 'secondary' | 'tertiary'\n}\n\nconst Button: React.FC<ButtonProps> = ({\n  children,\n  disabled,\n  href,\n  onClick,\n  size,\n  text,\n  to,\n  variant,\n}) => {\n  const { color, spacing } = useContext(ThemeContext)\n\n  let buttonColor: string\n  switch (variant) {\n    case 'secondary':\n      buttonColor = color.grey[500]\n      break\n    case 'default':\n    default:\n      buttonColor = color.primary.main\n  }\n\n  let boxShadow: string\n  let buttonSize: number\n  let buttonPadding: number\n  let fontSize: number\n  switch (size) {\n    case 'sm':\n      boxShadow = `4px 4px 8px ${color.grey[300]},\n        -8px -8px 16px ${color.grey[100]}FF;`\n      buttonPadding = spacing[3]\n      buttonSize = 36\n      fontSize = 14\n      break\n    case 'lg':\n      boxShadow = `6px 6px 12px ${color.grey[300]},\n        -12px -12px 24px ${color.grey[100]}ff;`\n      buttonPadding = spacing[4]\n      buttonSize = 72\n      fontSize = 16\n      break\n    case 'md':\n    default:\n      boxShadow = `6px 6px 12px ${color.grey[300]},\n        -12px -12px 24px -2px ${color.grey[100]}ff;`\n      buttonPadding = spacing[4]\n      buttonSize = 56\n      fontSize = 16\n  }\n\n  const ButtonChild = useMemo(() => {\n    if (to) {\n      return <StyledLink to={to}>{text}</StyledLink>\n    } else if (href) {\n      return <StyledExternalLink href={href} target=\"__blank\">{text}</StyledExternalLink>\n    } else {\n      return text\n    }\n  }, [href, text, to])\n\n  return (\n    <StyledButton\n      boxShadow={boxShadow}\n      color={buttonColor}\n      disabled={disabled}\n      fontSize={fontSize}\n      onClick={onClick}\n      padding={buttonPadding}\n      size={buttonSize}\n    >\n      {children}\n      {ButtonChild}\n    </StyledButton>\n  )\n}\n\ninterface StyledButtonProps {\n  boxShadow: string,\n  color: string,\n  disabled?: boolean,\n  fontSize: number,\n  padding: number,\n  size: number\n}\n\nconst StyledButton = styled.button<StyledButtonProps>`\n  align-items: center;\n  background-color: ${props => props.theme.color.grey[200]};\n  border: 0;\n  border-radius: 12px;\n  box-shadow: ${props => props.boxShadow};\n  color: ${props => !props.disabled ? props.color : `${props.color}55`};\n  cursor: pointer;\n  display: flex;\n  font-size: ${props => props.fontSize}px;\n  font-weight: 700;\n  height: ${props => props.size}px;\n  justify-content: center;\n  outline: none;\n  padding-left: ${props => props.padding}px;\n  padding-right: ${props => props.padding}px;\n  pointer-events: ${props => !props.disabled ? undefined : 'none'};\n  width: 100%;\n  &:hover {\n    background-color: ${props => props.theme.color.grey[100]};\n  }\n`\n\nconst StyledLink = styled(Link)`\n  align-items: center;\n  color: inherit;\n  display: flex;\n  flex: 1;\n  height: 56px;\n  justify-content: center;\n  margin: 0 ${props => -props.theme.spacing[4]}px;\n  padding: 0 ${props => props.theme.spacing[4]}px;\n  text-decoration: none;\n`\n\nconst StyledExternalLink = styled.a`\n  align-items: center;\n  color: inherit;\n  display: flex;\n  flex: 1;\n  height: 56px;\n  justify-content: center;\n  margin: 0 ${props => -props.theme.spacing[4]}px;\n  padding: 0 ${props => props.theme.spacing[4]}px;\n  text-decoration: none;\n`\n\nexport default Button"]},"metadata":{},"sourceType":"module"}