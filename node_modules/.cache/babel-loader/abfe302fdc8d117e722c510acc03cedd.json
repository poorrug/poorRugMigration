{"ast":null,"code":"import { useCallback, useEffect, useState } from 'react';\nimport BigNumber from 'bignumber.js';\nimport { useWallet } from 'use-wallet';\nimport { getEarned } from '../yamUtils';\nimport useYam from './useYam';\n\nconst useEarnings = pool => {\n  const [balance, setBalance] = useState(new BigNumber(0));\n  const {\n    account\n  } = useWallet();\n  const yam = useYam();\n  const fetchBalance = useCallback(async () => {\n    const balance = await getEarned(yam, pool, account);\n    setBalance(new BigNumber(balance));\n  }, [account, pool, yam]);\n  useEffect(() => {\n    if (account && pool && yam) {\n      fetchBalance();\n    }\n  }, [account, pool, setBalance, yam]);\n  return balance;\n};\n\nexport default useEarnings;","map":{"version":3,"sources":["/Users/sminem/Documents/GitHub/poorRugMigration/src/hooks/useEarnings.ts"],"names":["useCallback","useEffect","useState","BigNumber","useWallet","getEarned","useYam","useEarnings","pool","balance","setBalance","account","yam","fetchBalance"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,QAAjC,QAAiD,OAAjD;AAEA,OAAOC,SAAP,MAAsB,cAAtB;AACA,SAASC,SAAT,QAA0B,YAA1B;AAGA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAEA,MAAMC,WAAW,GAAIC,IAAD,IAAoB;AACtC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,IAAIC,SAAJ,CAAc,CAAd,CAAD,CAAtC;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAAmCP,SAAS,EAAlD;AACA,QAAMQ,GAAG,GAAGN,MAAM,EAAlB;AAEA,QAAMO,YAAY,GAAGb,WAAW,CAAC,YAAY;AAC3C,UAAMS,OAAO,GAAG,MAAMJ,SAAS,CAACO,GAAD,EAAMJ,IAAN,EAAYG,OAAZ,CAA/B;AACAD,IAAAA,UAAU,CAAC,IAAIP,SAAJ,CAAcM,OAAd,CAAD,CAAV;AACD,GAH+B,EAG7B,CAACE,OAAD,EAAUH,IAAV,EAAgBI,GAAhB,CAH6B,CAAhC;AAKAX,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIU,OAAO,IAAIH,IAAX,IAAmBI,GAAvB,EAA4B;AAC1BC,MAAAA,YAAY;AACb;AACF,GAJQ,EAIN,CAACF,OAAD,EAAUH,IAAV,EAAgBE,UAAhB,EAA4BE,GAA5B,CAJM,CAAT;AAMA,SAAOH,OAAP;AACD,CAjBD;;AAmBA,eAAeF,WAAf","sourcesContent":["import { useCallback, useEffect, useState } from 'react'\n\nimport BigNumber from 'bignumber.js'\nimport { useWallet } from 'use-wallet'\nimport { Contract } from \"web3-eth-contract\"\n\nimport { getEarned } from '../yamUtils'\nimport useYam from './useYam'\n\nconst useEarnings = (pool: Contract) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { account }: { account: string } = useWallet()\n  const yam = useYam()\n\n  const fetchBalance = useCallback(async () => {\n    const balance = await getEarned(yam, pool, account)\n    setBalance(new BigNumber(balance))\n  }, [account, pool, yam])\n\n  useEffect(() => {\n    if (account && pool && yam) {\n      fetchBalance()\n    }\n  }, [account, pool, setBalance, yam])\n\n  return balance\n}\n\nexport default useEarnings"]},"metadata":{},"sourceType":"module"}