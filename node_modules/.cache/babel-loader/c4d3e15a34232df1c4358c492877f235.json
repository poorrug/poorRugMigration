{"ast":null,"code":"import Web3 from 'web3';\nimport ERC20ABI from '../constants/abi/ERC20.json';\nexport const getContract = (provider, address) => {\n  const web3 = new Web3(provider);\n  const contract = new web3.eth.Contract(ERC20ABI.abi, address);\n  return contract;\n};\nexport const getAllowance = async (tokenContract, poolContract, account) => {\n  try {\n    const allowance = await tokenContract.methods.allowance(account, poolContract.options.address).call();\n    return allowance;\n  } catch (e) {\n    return '0';\n  }\n};\nexport const getBalance = async (provider, tokenAddress, userAddress) => {\n  const tokenContract = getContract(provider, tokenAddress);\n\n  try {\n    const balance = await tokenContract.methods.balanceOf(userAddress).call();\n    return balance;\n  } catch (e) {\n    return '0';\n  }\n};","map":{"version":3,"sources":["/Users/sminem/Documents/GitHub/poorRugMigration/src/utils/erc20.ts"],"names":["Web3","ERC20ABI","getContract","provider","address","web3","contract","eth","Contract","abi","getAllowance","tokenContract","poolContract","account","allowance","methods","options","call","e","getBalance","tokenAddress","userAddress","balance","balanceOf"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB;AAIA,OAAOC,QAAP,MAAqB,6BAArB;AAGA,OAAO,MAAMC,WAAW,GAAG,CAACC,QAAD,EAAqBC,OAArB,KAAyC;AAClE,QAAMC,IAAI,GAAG,IAAIL,IAAJ,CAASG,QAAT,CAAb;AACA,QAAMG,QAAQ,GAAG,IAAID,IAAI,CAACE,GAAL,CAASC,QAAb,CAAsBP,QAAQ,CAACQ,GAA/B,EAA0DL,OAA1D,CAAjB;AACA,SAAOE,QAAP;AACD,CAJM;AAMP,OAAO,MAAMI,YAAY,GAAG,OAAOC,aAAP,EAAgCC,YAAhC,EAAwDC,OAAxD,KAA6F;AACvH,MAAI;AACF,UAAMC,SAAiB,GAAG,MAAMH,aAAa,CAACI,OAAd,CAAsBD,SAAtB,CAAgCD,OAAhC,EAAyCD,YAAY,CAACI,OAAb,CAAqBZ,OAA9D,EAAuEa,IAAvE,EAAhC;AACA,WAAOH,SAAP;AACD,GAHD,CAGE,OAAOI,CAAP,EAAU;AACV,WAAO,GAAP;AACD;AACF,CAPM;AASP,OAAO,MAAMC,UAAU,GAAG,OAAOhB,QAAP,EAA2BiB,YAA3B,EAAiDC,WAAjD,KAA0F;AAClH,QAAMV,aAAa,GAAGT,WAAW,CAACC,QAAD,EAAWiB,YAAX,CAAjC;;AACA,MAAI;AACF,UAAME,OAAe,GAAG,MAAMX,aAAa,CAACI,OAAd,CAAsBQ,SAAtB,CAAgCF,WAAhC,EAA6CJ,IAA7C,EAA9B;AACA,WAAOK,OAAP;AACD,GAHD,CAGE,OAAOJ,CAAP,EAAU;AACV,WAAO,GAAP;AACD;AACF,CARM","sourcesContent":["import Web3 from 'web3'\nimport { provider } from 'web3-core'\nimport { AbiItem } from 'web3-utils'\n\nimport ERC20ABI from '../constants/abi/ERC20.json'\nimport { Contract } from \"web3-eth-contract\"\n\nexport const getContract = (provider: provider, address: string) => {\n  const web3 = new Web3(provider)\n  const contract = new web3.eth.Contract(ERC20ABI.abi as unknown as AbiItem, address)\n  return contract\n}\n\nexport const getAllowance = async (tokenContract: Contract, poolContract: Contract, account: string): Promise<string> => {\n  try {\n    const allowance: string = await tokenContract.methods.allowance(account, poolContract.options.address).call()\n    return allowance\n  } catch (e) {\n    return '0'\n  }\n}\n\nexport const getBalance = async (provider: provider, tokenAddress: string, userAddress: string): Promise<string> => {\n  const tokenContract = getContract(provider, tokenAddress)\n  try {\n    const balance: string = await tokenContract.methods.balanceOf(userAddress).call()\n    return balance\n  } catch (e) {\n    return '0'\n  }\n}"]},"metadata":{},"sourceType":"module"}