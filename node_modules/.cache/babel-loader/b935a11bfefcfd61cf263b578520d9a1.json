{"ast":null,"code":"var _jsxFileName = \"/Users/sminem/Documents/GitHub/poorRugMigration/src/components/DisclaimerModal/DisclaimerModal.tsx\";\nimport React, { useCallback, useState, useMemo } from 'react';\nimport Button from '../Button';\nimport CardIcon from '../CardIcon';\nimport Modal from '..//Modal';\nimport ModalActions from '..//ModalActions';\nimport ModalTitle from '..//ModalTitle';\n\nconst DisclaimerModal = ({\n  onConfirm,\n  onDismiss\n}) => {\n  const [step, setStep] = useState('disclaimer');\n  const handleConfirm = useCallback(() => {\n    onConfirm();\n    onDismiss();\n  }, [onConfirm, onDismiss]);\n  const modalContent = useMemo(() => {\n    if (step === 'disclaimer') {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }\n      }, \"Audits: None.\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }\n      }, \"While the initial creators of the PoorRug have made reasonable efforts to attempt to ensure the security of the contracts, including forking much of the codebase from existing well-audited projects and soliciting review from friends, nothing approaching the rigor of a formal audit has been conducted at this time.\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }\n      }, \"We STRONGLY urge caution to anyone who chooses to engage with these contracts.\"));\n    }\n  }, [step]);\n  const button = useMemo(() => {\n    if (step === 'disclaimer') {\n      return /*#__PURE__*/React.createElement(Button, {\n        text: \"Next\",\n        variant: \"secondary\",\n        onClick: handleConfirm,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 9\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(Button, {\n        text: \"I understand\",\n        onClick: handleConfirm,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }\n      });\n    }\n  }, [setStep, step, handleConfirm]);\n  return /*#__PURE__*/React.createElement(Modal, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ModalTitle, {\n    text: `Warning`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CardIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, \"\\u26A0\\uFE0F\"), modalContent, /*#__PURE__*/React.createElement(ModalActions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, button));\n};\n\nexport default DisclaimerModal;","map":{"version":3,"sources":["/Users/sminem/Documents/GitHub/poorRugMigration/src/components/DisclaimerModal/DisclaimerModal.tsx"],"names":["React","useCallback","useState","useMemo","Button","CardIcon","Modal","ModalActions","ModalTitle","DisclaimerModal","onConfirm","onDismiss","step","setStep","handleConfirm","modalContent","button"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,EAAuCC,OAAvC,QAAsD,OAAtD;AAEA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,KAAP,MAAkC,WAAlC;AACA,OAAOC,YAAP,MAAyB,kBAAzB;AACA,OAAOC,UAAP,MAAuB,gBAAvB;;AAMA,MAAMC,eAA0C,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAA8B;AAE/E,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,YAAD,CAAhC;AAEA,QAAMY,aAAa,GAAGb,WAAW,CAAC,MAAM;AACtCS,IAAAA,SAAS;AACTC,IAAAA,SAAS;AACV,GAHgC,EAG9B,CAACD,SAAD,EAAYC,SAAZ,CAH8B,CAAjC;AAKA,QAAMI,YAAY,GAAGZ,OAAO,CAAC,MAAM;AACjC,QAAIS,IAAI,KAAK,YAAb,EAA2B;AACzB,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sUAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0FAHF,CADF;AAOD;AACF,GAV2B,EAUzB,CAACA,IAAD,CAVyB,CAA5B;AAYA,QAAMI,MAAM,GAAGb,OAAO,CAAC,MAAM;AAC3B,QAAIS,IAAI,KAAK,YAAb,EAA2B;AACzB,0BACE,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,MAAb;AAAoB,QAAA,OAAO,EAAC,WAA5B;AAAwC,QAAA,OAAO,EAAEE,aAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAGD,KAJD,MAIO;AACL,0BACE,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,cAAb;AAA4B,QAAA,OAAO,EAAEA,aAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAGD;AACF,GAVqB,EAUnB,CAACD,OAAD,EAAUD,IAAV,EAAgBE,aAAhB,CAVmB,CAAtB;AAYA,sBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAG,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,EAGGC,YAHH,eAIE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,MADH,CAJF,CADF;AAUD,CA3CD;;AA8CA,eAAeP,eAAf","sourcesContent":["import React, { useCallback, useState, useMemo } from 'react'\n\nimport Button from '../Button'\nimport CardIcon from '../CardIcon'\nimport Modal, { ModalProps } from '..//Modal'\nimport ModalActions from '..//ModalActions'\nimport ModalTitle from '..//ModalTitle'\n\ninterface DisclaimerModal extends ModalProps {\n  onConfirm: () => void\n}\n\nconst DisclaimerModal: React.FC<DisclaimerModal> = ({ onConfirm, onDismiss }) => {\n\n  const [step, setStep] = useState('disclaimer')\n\n  const handleConfirm = useCallback(() => {\n    onConfirm()\n    onDismiss()\n  }, [onConfirm, onDismiss])\n\n  const modalContent = useMemo(() => {\n    if (step === 'disclaimer') {\n      return (\n        <div>\n          <p>Audits: None.</p>\n          <p>While the initial creators of the PoorRug have made reasonable efforts to attempt to ensure the security of the contracts, including forking much of the codebase from existing well-audited projects and soliciting review from friends, nothing approaching the rigor of a formal audit has been conducted at this time.</p>\n          <p>We STRONGLY urge caution to anyone who chooses to engage with these contracts.</p>\n        </div>\n      )\n    }\n  }, [step])\n\n  const button = useMemo(() => {\n    if (step === 'disclaimer') {\n      return (\n        <Button text=\"Next\" variant=\"secondary\" onClick={handleConfirm} />\n      )\n    } else {\n      return (\n        <Button text=\"I understand\" onClick={handleConfirm} />\n      )\n    }\n  }, [setStep, step, handleConfirm])\n\n  return (\n    <Modal>\n      <ModalTitle text={`Warning`} />\n      <CardIcon>⚠️</CardIcon>\n      {modalContent}\n      <ModalActions>\n        {button}\n      </ModalActions>\n    </Modal>\n  )\n}\n\n\nexport default DisclaimerModal"]},"metadata":{},"sourceType":"module"}